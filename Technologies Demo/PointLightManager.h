#include "LightStructs.h"
#include "PointLightShadowMap.h"
#include <vector>

#pragma once
namespace ComputeTileShading
{
	class PointLightManager
	{
		std::vector<PointLight> point_light_data;
		///////////////////////////////////////////////////////////////////////////////////////
		GLuint light_color_buffer;
		GLuint light_pos_rad_buffer;
		///////////////////////////////////////////////////////////////////////////////////////
		GLuint texture_light_color_buffer;
		GLuint texture_light_pos_rad_buffer;
		///////////////////////////////////////////////////////////////////////////////////////
		void Init(void);
	public:
		PointLightManager(void);
		~PointLightManager();
		///////////////////////////////////////////////////////////////////////////////////////
		void AddLight(PointLight data);
		void UpdateLight(void);
		void SetLightToBuffer(void);
		///////////////////////////////////////////////////////////////////////////////////////
		int32_t GetLightCount(void);
		///////////////////////////////////////////////////////////////////////////////////////
		GLuint GetPointLightBufferColor(void);
		GLuint GetPointLightBufferPositionRadius(void);
	};
}

