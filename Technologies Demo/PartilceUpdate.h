#include "Particle.h"
#include "MCamera.h"
#include "ShaderParticleUpdate.h"

#pragma once
namespace Particle
{
	class PartilceUpdate
	{
		const uint32_t g_PatricleCount;
		float g_radiusRange;
		float g_heightRange;
		float meter;
		////////////////////////////////////////////////////////////////////////////////
		uint8_t cicle;//индекс буффера в который будут записаны новые данные
		////////////////////////////////////////////////////////////////////////////////
		GLuint g_TransformFeedback[3];
		GLuint g_ParticlesVertexArray[3];
		GLuint g_ParticlesBuffers[3];
		////////////////////////////////////////////////////////////////////////////////
		MCamera::Camera *camera;
		////////////////////////////////////////////////////////////////////////////////
		Shader::ShaderParticleUpdate *shader_particle_update;
		////////////////////////////////////////////////////////////////////////////////
		void InitAttrib(GLuint program, GLuint VBO, GLuint VAO);
		////////////////////////////////////////////////////////////////////////////////
		float random(void);
		void GenParticleBuffer(void);
		void SetupSystem(void);
	public:
		PartilceUpdate(MCamera::Camera *camera);
		~PartilceUpdate();
		////////////////////////////////////////////////////////////////////////////////
		void Update(glm::vec3 wind_dir, float dt_s, float intensity);
		////////////////////////////////////////////////////////////////////////////////
		GLuint *GetVAOs(void);
		GLuint *GetVBOs(void);
		uint32_t GetParticleCount(void);
	};
}

